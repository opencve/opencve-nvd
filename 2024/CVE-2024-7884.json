{
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "When a canister method is called via ic_cdk::call* , a new Future CallFuture is created  and can be awaited by the caller to get the execution result. Internally, the state of the Future is tracked and stored in a struct called CallFutureState.  A bug in the polling implementation of the CallFuture allows multiple references to be held for this internal state and not all references were dropped before the Future is resolved. Since we have unaccounted references held, a copy of the internal state ended up being persisted in the canister's heap and thus causing a memory leak. \nImpact Canisters built in Rust with ic_cdk and ic_cdk_timers are affected. If these canisters call a canister method, use timers or heartbeat, they will likely leak a small amount of memory on every such operation. In the worst case, this could lead to heap memory exhaustion triggered by an attacker. Motoko based canisters are not affected by the bug.\nPatchesThe patch has been backported to all minor versions between >= 0.8.0, <= 0.15.0. The patched versions available are 0.8.2, 0.9.3, 0.10.1, 0.11.6, 0.12.2, 0.13.5, 0.14.1, 0.15.1 and their previous versions have been yanked. WorkaroundsThere are no known workarounds at the moment. Developers are recommended to upgrade their canister as soon as possible to the latest available patched version of ic_cdk to avoid running out of Wasm heap memory. \nUpgrading the canisters (without updating `ic_cdk`) also frees the leaked memory but it's only a temporary solution."
    }
  ],
  "id": "CVE-2024-7884",
  "lastModified": "2024-09-05T13:15:11.390",
  "metrics": {
    "cvssMetricV31": [
      {
        "cvssData": {
          "attackComplexity": "LOW",
          "attackVector": "NETWORK",
          "availabilityImpact": "HIGH",
          "baseScore": 7.5,
          "baseSeverity": "HIGH",
          "confidentialityImpact": "NONE",
          "integrityImpact": "NONE",
          "privilegesRequired": "NONE",
          "scope": "UNCHANGED",
          "userInteraction": "NONE",
          "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "version": "3.1"
        },
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "source": "6b35d637-e00f-4228-858c-b20ad6e1d07b",
        "type": "Secondary"
      }
    ]
  },
  "published": "2024-09-05T13:15:11.390",
  "references": [
    {
      "source": "6b35d637-e00f-4228-858c-b20ad6e1d07b",
      "url": "https://docs.rs/ic-cdk/latest/ic_cdk/"
    },
    {
      "source": "6b35d637-e00f-4228-858c-b20ad6e1d07b",
      "url": "https://github.com/dfinity/cdk-rs/pull/509"
    },
    {
      "source": "6b35d637-e00f-4228-858c-b20ad6e1d07b",
      "url": "https://internetcomputer.org/docs/current/references/ic-interface-spec"
    }
  ],
  "sourceIdentifier": "6b35d637-e00f-4228-858c-b20ad6e1d07b",
  "vulnStatus": "Received",
  "weaknesses": [
    {
      "description": [
        {
          "lang": "en",
          "value": "CWE-401"
        }
      ],
      "source": "6b35d637-e00f-4228-858c-b20ad6e1d07b",
      "type": "Secondary"
    }
  ]
}