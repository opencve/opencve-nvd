{
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ncfg80211: fix race in netlink owner interface destruction\n\nMy previous fix here to fix the deadlock left a race where\nthe exact same deadlock (see the original commit referenced\nbelow) can still happen if cfg80211_destroy_ifaces() already\nruns while nl80211_netlink_notify() is still marking some\ninterfaces as nl_owner_dead.\n\nThe race happens because we have two loops here - first we\ndev_close() all the netdevs, and then we destroy them. If we\nalso have two netdevs (first one need only be a wdev though)\nthen we can find one during the first iteration, close it,\nand go to the second iteration -- but then find two, and try\nto destroy also the one we didn't close yet.\n\nFix this by only iterating once."
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se resolvió la siguiente vulnerabilidad: cfg80211: corrige la ejecución en la destrucción de la interfaz del propietario de netlink. Mi solución anterior aquí para arreglar el punto muerto dejó una ejecución donde exactamente el mismo punto muerto (consulte la confirmación original a la que se hace referencia a continuación) aún puede ocurrir si cfg80211_destroy_ifaces () ya se ejecuta mientras nl80211_netlink_notify() todavía marca algunas interfaces como nl_owner_dead. La ejecución ocurre porque tenemos dos bucles aquí: primero dev_close() todos los netdevs y luego los destruimos. Si también tenemos dos netdevs (aunque el primero solo necesita ser un wdev), entonces podemos encontrar uno durante la primera iteración, cerrarlo e ir a la segunda iteración, pero luego encontrar dos e intentar destruir también el que tenemos. Aún no ha cerrado. Solucione este problema iterando solo una vez."
    }
  ],
  "id": "CVE-2022-48784",
  "lastModified": "2024-07-16T13:43:58.773",
  "metrics": {},
  "published": "2024-07-16T12:15:03.427",
  "references": [
    {
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
      "url": "https://git.kernel.org/stable/c/241e633cb379c4f332fc1baf2abec95ec840cbeb"
    },
    {
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
      "url": "https://git.kernel.org/stable/c/c979f792a2baf6d0f3419587668a1a6eba46a3d2"
    },
    {
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
      "url": "https://git.kernel.org/stable/c/f0a6fd1527067da537e9c48390237488719948ed"
    }
  ],
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "vulnStatus": "Awaiting Analysis"
}