{
  "configurations": [
    {
      "nodes": [
        {
          "cpeMatch": [
            {
              "criteria": "cpe:2.3:a:apple:swiftnio_http\\/2:*:*:*:*:*:swift:*:*",
              "matchCriteriaId": "1D718284-A7FD-4FF1-B6D4-BAC1CC7FED66",
              "versionEndExcluding": "1.20.0",
              "versionStartIncluding": "1.0.0",
              "vulnerable": true
            }
          ],
          "negate": false,
          "operator": "OR"
        }
      ]
    }
  ],
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "A program using swift-nio-http2 is vulnerable to a denial of service attack, caused by a network peer sending a specially crafted HTTP/2 frame. This vulnerability is caused by a logical error when parsing a HTTP/2 HEADERS or HTTP/2 PUSH_PROMISE frame where the frame contains padding information without any other data. This logical error caused confusion about the size of the frame, leading to a parsing error. This parsing error immediately crashes the entire process. Sending a HEADERS frame or PUSH_PROMISE frame with HTTP/2 padding information does not require any special permission, so any HTTP/2 connection peer may send such a frame. For clients, this means any server to which they connect may launch this attack. For servers, anyone they allow to connect to them may launch such an attack. The attack is low-effort: it takes very little resources to send an appropriately crafted frame. The impact on availability is high: receiving the frame immediately crashes the server, dropping all in-flight connections and causing the service to need to restart. It is straightforward for an attacker to repeatedly send appropriately crafted frames, so attackers require very few resources to achieve a substantial denial of service. The attack does not have any confidentiality or integrity risks in and of itself: swift-nio-http2 is parsing the frame in memory-safe code, so the crash is safe. However, sudden process crashes can lead to violations of invariants in services, so it is possible that this attack can be used to trigger an error condition that has confidentiality or integrity risks. The risk can be mitigated if untrusted peers can be prevented from communicating with the service. This mitigation is not available to many services. The issue is fixed by rewriting the parsing code to correctly handle the condition. The issue was found by automated fuzzing by oss-fuzz."
    },
    {
      "lang": "es",
      "value": "Un programa usando swift-nio-http2 es vulnerable a un ataque de denegación de servicio, causado por el envío de una trama HTTP/2 especialmente diseñada por parte de un compañero de red. Esta vulnerabilidad está causada por un error de lógica cuando es analizada una trama HTTP/2 HEADERS o HTTP/2 PUSH_PROMISE en la que la trama contiene información de relleno sin ningún otro dato. Este error lógico causó una confusión sobre el tamaño de la trama, conllevando un error de análisis. Este error de análisis bloquea inmediatamente todo el proceso. El envío de una trama HEADERS o PUSH_PROMISE con información de relleno HTTP/2 no requiere ningún permiso especial, por lo que cualquier par de conexión HTTP/2 puede enviar una trama de este tipo. Para los clientes, esto significa que cualquier servidor al que sean conectados puede lanzar este ataque. Para los servidores, cualquier persona a la que permitan conectarse puede lanzar este ataque. El ataque es de bajo esfuerzo: son necesarios muy pocos recursos para enviar una trama apropiadamente diseñada. El impacto en la disponibilidad es alto: la recepción de la trama bloquea inmediatamente el servidor, arrojando todas las conexiones en curso y causando la necesidad de reiniciar el servicio. Es sencillo para un atacante enviar repetidamente tramas apropiadamente diseñadas, por lo que los atacantes necesitan muy pocos recursos para lograr una denegación de servicio sustancial. El ataque no presenta ningún riesgo de confidencialidad o integridad en sí mismo: swift-nio-http2 está analizando la trama en código seguro para la memoria, por lo que el bloqueo es seguro. Sin embargo, los bloqueos repentinas de procesos pueden conllevar a violaciones de invariantes en los servicios, por lo que es posible que este ataque pueda ser usado para desencadenar una condición de error que tenga riesgos de confidencialidad o integridad. El riesgo puede mitigarse si es posible evitar que los compañeros que no son confiables puedan comunicarse con el servicio. Esta mitigación no está disponible para muchos servicios. El problema es corregido al reescribir el código de análisis para manejar correctamente la condición. El problema es encontrado mediante fuzzing automatizado por oss-fuzz"
    }
  ],
  "id": "CVE-2022-0618",
  "lastModified": "2022-03-16T18:36:34.563",
  "metrics": {
    "cvssMetricV2": [
      {
        "acInsufInfo": false,
        "baseSeverity": "HIGH",
        "cvssData": {
          "accessComplexity": "LOW",
          "accessVector": "NETWORK",
          "authentication": "NONE",
          "availabilityImpact": "COMPLETE",
          "baseScore": 7.8,
          "confidentialityImpact": "NONE",
          "integrityImpact": "NONE",
          "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C",
          "version": "2.0"
        },
        "exploitabilityScore": 10.0,
        "impactScore": 6.9,
        "obtainAllPrivilege": false,
        "obtainOtherPrivilege": false,
        "obtainUserPrivilege": false,
        "source": "nvd@nist.gov",
        "type": "Primary",
        "userInteractionRequired": false
      }
    ],
    "cvssMetricV31": [
      {
        "cvssData": {
          "attackComplexity": "LOW",
          "attackVector": "NETWORK",
          "availabilityImpact": "HIGH",
          "baseScore": 7.5,
          "baseSeverity": "HIGH",
          "confidentialityImpact": "NONE",
          "integrityImpact": "NONE",
          "privilegesRequired": "NONE",
          "scope": "UNCHANGED",
          "userInteraction": "NONE",
          "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "version": "3.1"
        },
        "exploitabilityScore": 3.9,
        "impactScore": 3.6,
        "source": "nvd@nist.gov",
        "type": "Primary"
      }
    ]
  },
  "published": "2022-03-10T17:44:56.647",
  "references": [
    {
      "source": "cve@forums.swift.org",
      "tags": [
        "Third Party Advisory"
      ],
      "url": "https://github.com/apple/swift-nio-http2/security/advisories/GHSA-q36x-r5x4-h4q6"
    }
  ],
  "sourceIdentifier": "cve@forums.swift.org",
  "vulnStatus": "Analyzed",
  "weaknesses": [
    {
      "description": [
        {
          "lang": "en",
          "value": "NVD-CWE-Other"
        }
      ],
      "source": "nvd@nist.gov",
      "type": "Primary"
    },
    {
      "description": [
        {
          "lang": "en",
          "value": "CWE-130"
        }
      ],
      "source": "cve@forums.swift.org",
      "type": "Secondary"
    }
  ]
}